/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package projeto2;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class PrincipalTest {
@Test()
    public void teste(){
       
        Peao p1=new Peao(EnumCor.BRANCO, 1.0, 1.0, "peaob.png");
         //teste peao branco sobe duas podiçãoss y
        assertEquals(true, p1.validarMovimento(1.0, 3.0));
         //teste peao branco alterando x
         assertEquals(false, p1.validarMovimento(2.0, 3.0));
        //teste peao branco sobe tres podiçãoss y
        assertEquals(false, p1.validarMovimento(1.0, 4.0));

        Peao p2=new Peao(EnumCor.PRETO, 7.0, 7.0, "peaop.png");
        //teste peao preto descendo y
        assertEquals(true, p2.validarMovimento(7.0, 6.0));
         //teste peao preto alterando x
         assertEquals(false, p2.validarMovimento(5.0, 6.0));
        //teste peao preto descendo y
        assertEquals(false, p2.validarMovimento(7.0, 3.0));

        Cavalo c1=new Cavalo(EnumCor.BRANCO, 1.0, 0.0, "cavalob.png");
        //cavalo em L Branco
        assertEquals(true, c1.validarMovimento(0.0, 2.0));
        assertEquals(false, c1.validarMovimento(5.0, 2.0));

        Cavalo c2=new Cavalo(EnumCor.PRETO, 1.0, 7.0, "cavalob.png");
        //cavalo em L Preto 
        assertEquals(true, c2.validarMovimento(0.0, 5.0));
        Cavalo c3=new Cavalo(EnumCor.PRETO, 1.0, 7.0, "cavalob.png");
        assertEquals(true, c3.validarMovimento(2.0, 5.0));  
        assertEquals(true, c3.validarMovimento(1.0, 3.0)); 
        assertEquals(false, c3.validarMovimento(4.0, 3.0)); 



        //teste Rei branco
        Rei r1 = new Rei(EnumCor.BRANCO, 4, 0, "reib.png");
        assertEquals(true, r1.validarMovimento(5.0, 0.0));  
        assertEquals(true, r1.validarMovimento(5.0, 1.0));
        assertEquals(true, r1.validarMovimento(6.0, 1.0));
        assertEquals(true, r1.validarMovimento(6.0, 2.0)); 
        assertEquals(false, r1.validarMovimento(6.0, 4.0)); 

        //rei preto
        r1.setCor(EnumCor.PRETO); 
        r1.setX(4);
        r1.setY(7);
        assertEquals(true, r1.validarMovimento(4.0, 6.0));  
        assertEquals(true, r1.validarMovimento(4.0, 5.0));  
        assertEquals(false, r1.validarMovimento(2.0, 5.0));
        assertEquals(true, r1.validarMovimento(3.0, 5.0)); 
        assertEquals(false, r1.validarMovimento(2.0, 1.0));


        //teste Torre
        //torre branca
        Torre t1=new Torre(EnumCor.BRANCO, 0, 0, "torreb.png");
        assertEquals(false, t1.validarMovimento(4.0, 6.0));  
        assertEquals(true, t1.validarMovimento(1.0, 0.0)); 
        assertEquals(true, t1.validarMovimento(2.0, 0.0)); 
        assertEquals(true, t1.validarMovimento(3.0, 0.0)); 
        assertEquals(true, t1.validarMovimento(4.0, 0.0)); 
        assertEquals(true, t1.validarMovimento(5.0, 0.0)); 
        assertEquals(true, t1.validarMovimento(6.0, 0.0)); 
        assertEquals(true, t1.validarMovimento(7.0, 0.0)); 
        assertEquals(true, t1.validarMovimento(7.0, 1.0)); 
        assertEquals(true, t1.validarMovimento(7.0, 2.0)); 
        assertEquals(true, t1.validarMovimento(7.0, 3.0)); 
        assertEquals(true, t1.validarMovimento(7.0, 4.0)); 
        assertEquals(true, t1.validarMovimento(7.0, 5.0)); 
        assertEquals(false, t1.validarMovimento(5.0, 0.0)); 

        //torre preta
        t1.setCor(EnumCor.PRETO);
        t1.setX(7);
        t1.setY(7);
        assertEquals(false, t1.validarMovimento(4.0, 6.0));  
        assertEquals(true, t1.validarMovimento(7.0, 6.0)); 
        assertEquals(true, t1.validarMovimento(7.0, 5.0)); 
        assertEquals(true, t1.validarMovimento(7.0, 4.0)); 
        assertEquals(true, t1.validarMovimento(6.0, 4.0)); 
        assertEquals(true, t1.validarMovimento(5.0, 4.0)); 
        assertEquals(true, t1.validarMovimento(4.0, 4.0)); 
        assertEquals(true, t1.validarMovimento(3.0, 4.0)); 
        assertEquals(false, t1.validarMovimento(2.0, 3.0)); 
        assertEquals(false, t1.validarMovimento(1.0, 2.0)); 





              

     

        

    }


}
